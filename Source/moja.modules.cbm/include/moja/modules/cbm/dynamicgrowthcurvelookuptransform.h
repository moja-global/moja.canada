#ifndef MOJA_MODULES_CBM_DYNAMICGROWTHCURVELOOKUPTRANSFORM_H_
#define MOJA_MODULES_CBM_DYNAMICGROWTHCURVELOOKUPTRANSFORM_H_

#include "moja/datarepository/iproviderrelationalinterface.h"
#include "moja/flint/ilandunitcontroller.h"
#include "moja/flint/itransform.h"

#include <Poco/LRUCache.h>
#include <Poco/ThreadLocal.h> 

#include <atomic>
#include <map>

namespace moja {
namespace modules {
namespace cbm {

/**
 * Looks up a merchantable volume curve generated by DynamicGrowthCurveTransform.
 */
class DynamicGrowthCurveLookupTransform : public flint::ITransform {
public:
    DynamicGrowthCurveLookupTransform(
        std::shared_ptr<std::map<int, std::map<std::string, DynamicVar>>> gcCache
    ) : _gcCache(gcCache) { }

	void configure(DynamicObject config,
		const flint::ILandUnitController& landUnitController,
		datarepository::DataRepository& dataRepository) override;

	void controllerChanged(const flint::ILandUnitController& controller) override;
	const DynamicVar& value() const override;

private:
	const flint::ILandUnitController* _landUnitController;
    mutable DynamicVar _value;
    mutable const flint::IVariable* _gcIdVar;

    mutable std::string _forestTypeFilter;
    std::shared_ptr<std::map<int, std::map<std::string, DynamicVar>>> _gcCache;
};

}}}

#endif // MOJA_MODULES_CBM_DYNAMICGROWTHCURVELOOKUPTRANSFORM_H_